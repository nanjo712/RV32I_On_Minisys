#include "trap.h"
#define SPI_MASTER_BASE 0x10001000U
#define FLASH_BASE 0x30000000U
const int dummy[] = {
    0x00000413, 0x00009117, 0xffc10113, 0x00c000ef,
    0x00000513, 0x00008067, 0xff410113, 0x00000517,
    0x01c50513, 0x00112423, 0xfe9ff0ef, 0x00050513,
    0x00100073, 0x0000006f
};

void flash_read(int addr, int *data) {
    int read_inst = (addr & 0xffffff) | 0x03000000;
    *(volatile uint32_t *)(SPI_MASTER_BASE + 0x04) = read_inst;
    *(volatile uint32_t *)(SPI_MASTER_BASE + 0x14) = 0; //div
    *(volatile uint32_t *)(SPI_MASTER_BASE + 0x18) = 0b00000001; //ss
    *(volatile uint32_t *)(SPI_MASTER_BASE + 0x10) = 0x00000340; //ctrl : Rx_NEG 置1会出现时序错误 待解决
    
    while((*(volatile uint32_t *)(SPI_MASTER_BASE + 0x10) & 256) != 0);

    char tmp[4];
    *(int *)tmp = *(volatile uint32_t *)(SPI_MASTER_BASE + 0x00);
    for(int i = 0; i < 4; i++) {
        *((uint8_t *)data + i) = tmp[3 - i];
    } //MSB -> LSB

    *(volatile uint32_t *)(SPI_MASTER_BASE + 0x18) = 0b00000000; //ss
}

int main() {
    for(int i = 0; i < sizeof(dummy); i = i + 4) {
        int data = 0;
        flash_read(FLASH_BASE + i, &data);
        check(data == *(uint32_t *)((unsigned char *)dummy + i));
    }
    return 0;
}