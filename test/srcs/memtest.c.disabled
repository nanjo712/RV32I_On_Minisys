#include "trap.h"

const uint64_t TEST_SIZE = 0xfff;
const uint64_t MASK_8 = 0xff;
const uint64_t MASK_16 = 0xfffe;
const uint64_t MASK_32 = 0xfffffffc;
const uint64_t MASK_64 = 0xfffffffffffffff8;

int main(){
    volatile uint8_t *mem = (volatile uint8_t *)0xa0000000;
    for(uint8_t i = 0; i != (TEST_SIZE & MASK_8); i++) {
        *(volatile uint8_t *)(mem + i) = i;
    }
    for(uint8_t i = 0; i != (TEST_SIZE & MASK_8); i++) {
        check(*(volatile uint8_t *)(mem + i) == i);
    }

    for(uint16_t i = 0; i != (TEST_SIZE & MASK_16); i += 2) {
        *(volatile uint16_t *)(mem + i) = i;
    }
    for(uint16_t i = 0; i != (TEST_SIZE & MASK_16); i += 2) {
        check(*(volatile uint16_t *)(mem + i) == i);
    }

    for(uint32_t i = 0; i != (TEST_SIZE & MASK_32); i += 4) {
        *(volatile uint32_t *)(mem + i) = i;
    }
    for(uint32_t i = 0; i != (TEST_SIZE & MASK_32); i += 4) {
        check(*(volatile uint32_t *)(mem + i) == i);
    }

    for(uint64_t i = 0; i != (TEST_SIZE & MASK_64); i += 8) {
        *(volatile uint64_t *)(mem + i) = i;
    }
    for(uint64_t i = 0; i != (TEST_SIZE & MASK_64); i += 8) {
        check(*(volatile uint64_t *)(mem + i) == i);
    }
    return 0;
}